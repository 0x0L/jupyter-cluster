#!/bin/bash

USAGE="usage: jupyter-docker (console | controller | engines | notebook)"

function parse_env {
  if [ -z $JUPYTER_NOTEBOOK_PORT ]; then
    JUPYTER_NOTEBOOK_PORT="8888"
  fi
  if [ -z $JUPYTER_IMAGE ]; then
    JUPYTER_IMAGE="0x0l/jupyter"
  fi

  PARAMS=""
  if [ ! -z $JUPYTER_CONTROLLER ] && [ ! -z $JUPYTER_KEY_PRV ]; then
    PARAMS+="-e JUPYTER_CONTROLLER=$JUPYTER_CONTROLLER "
    PARAMS+="-v $JUPYTER_KEY_PRV:/id_rsa:ro "
  fi
  if [ ! -z $JUPYTER_ID ]; then
    PARAMS+="-e JUPYTER_ID=$JUPYTER_ID "
  fi
  if [ ! -z $JUPYTER_SUDO ]; then
    PARAMS+="-e JUPYTER_SUDO=1 "
  fi
  if [ ! -z $JUPYTER_ENGINES_N ]; then
    PARAMS+="-e JUPYTER_ENGINES_N=$JUPYTER_ENGINES_N "
  fi
  PARAMS+="$JUPYTER_DOCKER_ARGS "
}

function run_console {
  docker run -it --rm $PARAMS $JUPYTER_IMAGE console
}

function run_engines {
  docker run -d $PARAMS $JUPYTER_IMAGE engines
}

function run_notebook {
  docker run -p $JUPYTER_NOTEBOOK_PORT:8888 \
             -e JUPYTER_NOTEBOOK_PASSWORD=$JUPYTER_NOTEBOOK_PASSWORD \
             -d $PARAMS $JUPYTER_IMAGE notebook
}

function run_controller {
  CONTROLLER_PORT=$(echo $JUPYTER_CONTROLLER | cut -d: -f2)
  docker run -v $JUPYTER_KEY_PUB:/id_rsa.pub:ro \
             -p $CONTROLLER_PORT:2222 \
             -e JUPYTER_ID=$JUPYTER_ID \
             -d 0x0l/jupyter controller
}

parse_env

ACTION=$1
case $ACTION in
  console)    run_console ;;
  controller) run_controller ;;
  engines)    run_engines ;;
  notebook)   run_notebook ;;
  *)          echo $USAGE ;;
esac
